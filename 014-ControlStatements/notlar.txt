
Kontrol deyimleri -- Control Statements


if statement

while
do while
for

switch
goto

break
continue

return

--------------------------------

if statement

if --> anahtar sözcük
else --> anahtar sözcük


if(expr)  --> //void türünden olmayacak

non-zero ise ifade -- true
zero ise ifade ---> false


if(expr)


else if(expr)


else


----------------

if(expr)
  statement; //true path


compound statement -- birleşik deyim

if(expr){
 statement1;
 statement2;
 statement3;
}


---------------------------

  Null statement

  if(expr)
     ;

  if(expr)
   {}


--------------------------------------

 if(x != 0)  --> if(x) yazabilirim


 if sequence point tir

 if(x++ > 10)

dikkat

 x = 10;

 if(x++ > 10)


#include <stdio.h>

int main()
{
    int x = 9;

    if(x++ > 10)
        printf("dogru\n");
    else
        printf("yanlis\n");

    return 0;
}

/*****************************************/
/*****************************************/

#include <stdio.h>

int foo(void);

int main()
{
    int x;

    if((x = foo()) > 10)
        printf("dogru\n");
    else
        printf("yanlis\n");

    return 0;
}

/*****************************************/
/*****************************************/


x = 6

if(x == 5) // yyanlıs
if(x = 5) // dogru

if(x & y) //&& yazmak istediğim yerde


int func();

if(func) // gecerli // always true


#include <stdio.h>

int foo(void)
{
    printf("foo cagrildi\n");
    return 0;
}

int main()
{
    if(foo())
        printf("orhn cagrildi\n");

    return 0;
}

/*****************************************/
/*****************************************/


if with initialize durumu gecerli degil

#include <stdio.h>

int foo(void)
{
    return 12;
}

int main()
{

    if(int x = foo(), x > 0)
        printf("orhn cagrildi\n");

    return 0;
}

/*****************************************/
/*****************************************/

#include <stdio.h>

int main()
{

   int c;

   c = getchar();
   if(c != '\n'){
        //dothis
   }

   if(c = getchar(), c != '\n'){
        //dothis
   }

   if((c = getchar()) != '\n'){
        //dothis
   }



    return 0;
}

/*****************************************/
/*****************************************/

  if(expr)
     statement; //true path
  else
     statement; //false path


#include <stdio.h>

int main()
{

   int x;

    printf("bir tam sayi giriniz : ");
    scanf("%d", &x);

    if(x % 2 == 0)
        printf("%d cift sayi\n", x);
    else
        printf("%d tek sayi\n", x);


    return 0;
}

/*****************************************/
/*****************************************/

   dangling else


   bu else kimin

 kendisine en yakın if'in elsi dir



if(x > 10)
  if(x > 20)
    ++a;
  else
   a *= 2;



#include <stdio.h>


//redundancy

int abs(int x)
{
    if(x > 0)
        return x;

    return -x;
}

int main()
{

    return 0;
}

/*****************************************/
/*****************************************/



  if(x != 0)
     y = x;
  else
     y = 0;


#include <stdio.h>

//mülakat soru
//daha basit  nasıl yazabiliriz

int main()
{
    int x = 10, y = 20;

    if(x != 0)
       y = x;
    else
       y = 0;

    // y = x

    return 0;
}

/*****************************************/
/*****************************************/



  if(x == 1)
     ++a;

  if(x == 3)
    ++b;

  if(x == 8)
     foo();


--------

  else if merdiveni --- cascaded if kullanaibliriz


if(x == 1)
   ++a;
else if(x == 3)
  ++b;
else if(x == 8)
   foo();
else if(x == 10)
  //
else if(x == 12)
  //
else if(x == 15)
  //
else if(x == 17)



switch anahatarı if else göre daha iyi optimizayonnu vardır


/********************************************************/


  test fonksiyonları

  test function
  query function
  predicate


 unary predicate
 binary predicate


 test fonksiyonları geri dönüşü bool
 C de bool yerine int kullanıyoruz


 //asal sayı kontrolu
 int isprime(int);

zero -- false
non zero -- true
     -1            1
 if(isprime(x) == isprime(y))
 {

 }

  if(!!isprime(x) == !!isprime(y))
  {

  }





#include <stdio.h>

int iseven(int x)
{
    return x % 2 == 0;
}


int isodd(int x)
{
    //return x % 2 != 0;
    return x % 2;
}


int main()
{


    return 0;
}

/*****************************************/
/*****************************************/


artık yıl sınaması
leap year

  4'e tam bolunmesi şart
   -ya 100'e tam bölünecek
   -yada 400'e tam bölünecek





#include <stdio.h>

//one-linear function
int isleap(int y)
{
    /*
    if(y % 4 == 0 && (y % 100 != 0 || y % 400 == 0))
        return 1;

    return 0;
    */

    return y % 4 == 0 && (y % 100 != 0 || y % 400 == 0);
}


int main()
{

    int x;

    printf("bir yil girelim\n");
    scanf("%d", &x);

    if(isleap(x))
        printf("x : %d artik yildir\n", x);
    else
        printf("x : %d artik yil degildir\n", x);

    return 0;
}

/*****************************************/
/*****************************************/

perfect number
mükemmel sayi


kendisi hariç bölenlerinin toplamı kendisine eşit olan sayı 'dır

6
1 + 2 + 3 == 6

28
1 + 2 + 4 + 7 + 14 == 28


#include <stdio.h>

int isperfect(int x)
{
    int sum = 0;

    for(int i = 1; i <= x/2; ++i){
        if(x % i == 0)
            sum += i;
    }

    return sum == x;
}


int main()
{

    for(int i = 2; i < 10000; ++i){
        if(isperfect(i))
            printf("%d is perfect!\n", i);
    }

    return 0;
}

/*****************************************/
/*****************************************/


  <ctype.h>   baslık dosyasını inceleyeceğiz

test fonksiyonları mevcut kutupohanede yogunluklu olarak
2 tane fonksiyonu convert fonksyionu


test fonksiyonları "is" ile başlar isimleri

int isupper(int ch);  //karaterin buyuk harf olup olmadıgını kontrol eder
int islower(int ch);  //karaterin kucuk harf olup olmadıgını kontrol eder
int isalpha(int ch);  //harf katarateri kontrolu
int isdigit(int ch);  // sayi karateri kontrolu
int isalnum(int ch);  // alfa numerik
int isxdigit(int ch); // hexidecimal sayi sistemindeki karateri kontrolu
int isspace(int ch);
int ispunct(int ch);
int isprint(int ch);
int isgraph(int ch); //bosluk karateri false
int isblank(int ch); // C99 ile eklendi space yada tab karateri kontrolu
int iscntrl(int ch); // kontrol karateri kontrolu







#include <stdio.h>
#include <ctype.h>

int main()
{
    int c;

    printf("bir karater giriniz : ");
    c = getchar();

    if(isupper(c)){
        printf("buyuk harf\n");
    }else{
        printf("buyuk harf degil\n");
    }

    return 0;
}

/*****************************************/
/*****************************************/




#include <stdio.h>
#include <ctype.h>

int main()
{
    int c;

    printf("bir karater giriniz : ");
    c = getchar();

    if(isupper(c)){
        printf("isupper true\n");
    }

    if(islower(c)){
        printf("islower true\n");
    }


    if(isalpha(c)){
        printf("isalpha true\n");
    }

    if(isdigit(c)){
        printf("isdigit true\n");
    }


    if(isalnum(c)){
        printf("isalnum true\n");
    }

    if(isxdigit(c)){
        printf("isxdigit true\n");
    }


    if(isspace(c)){
        printf("isspace true\n");
    }


    if(ispunct(c)){
        printf("ispunct true\n");
    }


    return 0;
}

/*****************************************/
/*****************************************/



#include <stdio.h>
#include <ctype.h>

int main()
{
    printf("isupper\n");

    for(int i = 0; i < 128; ++i){
        if(isupper(i)){
            printf("%c ", i);
        }
    }

    printf("\n");

    printf("islower\n");

    for(int i = 0; i < 128; ++i){
        if(islower(i)){
            printf("%c ", i);
        }
    }

     printf("\n");




    printf("isalpha\n");

    for(int i = 0; i < 128; ++i){
        if(isalpha(i)){
            printf("%c ", i);
        }
    }

     printf("\n");

    printf("isdigit\n");

    for(int i = 0; i < 128; ++i){
        if(isdigit(i)){
            printf("%c ", i);
        }
    }

     printf("\n");

    printf("isalnum\n");

    for(int i = 0; i < 128; ++i){
        if(isalnum(i)){
            printf("%c ", i);
        }
    }

     printf("\n");

    printf("isxdigit\n");

    for(int i = 0; i < 128; ++i){
        if(isxdigit(i)){
            printf("%c ", i);
        }
    }

     printf("\n");


    printf("isspace\n");

    for(int i = 0; i < 128; ++i){
        if(isspace(i)){
            printf("%d ", i);
        }
    }

     printf("\n");

    printf("ispunct\n");

    for(int i = 0; i < 128; ++i){
        if(ispunct(i)){
            printf("%c ", i);
        }
    }

     printf("\n");

    return 0;
}

/*****************************************/
/*****************************************/

#include <stdio.h>
#include <ctype.h>
#include <stdlib.h>
#include <time.h>
#include <Windows.h>

int main()
{
    srand((unsigned) time(0));

    for(;;){
        int c = rand() % 128;
        if(isprint(c)){
            //Sleep(50);
            _sleep(50);
            putchar(c);
        }
    }

    return 0;
}

/*****************************************/
/*****************************************/


dönüşüm fonksiyonları

int toupper(int ch);  // buyuk harfe cevir, eger kcuuk harf göndermezsek aynı karakterin kod numarasını döndürür
int tolower(int ch);  // kucuk harfe cevir, eger buyuk harf göndermezsek aynı karakterin kod numarasını döndürür


#include <stdio.h>
#include <ctype.h>


int main()
{
    int c;

    printf("bir karakter giriniz : ");
    c = getchar();

    printf("%c ====> %c\n",c, toupper(c));
    printf("%c ====> %c\n",c, tolower(c));


    return 0;
}

/*****************************************/
/*****************************************/


soru


#include <stdio.h>
#include <ctype.h>


int main()
{
    int c1, c2;

    printf("iki karakter giriniz : ");
    c1 = getchar();
    c2 = getchar();

    //if(c1 == c2)
    if(toupper(c1) == toupper(c2)){
        printf("%c ve %c ayni karaterler\n", c1, c2);
    }else {
        printf("%c ve %c farkli karaterler\n", c1, c2);
    }


    return 0;
}

/*****************************************/
/*****************************************/
#include <stdio.h>
#include <ctype.h>

//buyuk harf için kucuk harfi
//kucuk harf için buyuk harfi
//ikiside değil ise karater kod numarasını döndür

int to_opposite_case(int c)
{
    if(isupper(c))
        return tolower(c);

    if(islower(c))
        return toupper(c);

    return c;
}

int main()
{
   printf("bir karakter girin : ");
   int c = getchar();

   printf("%c =====>  %c\n", c, to_opposite_case(c));


    return 0;
}

/*****************************************/
/*****************************************/


#include <stdio.h>
#include <ctype.h>

//bu satırlardan 2 tanesinin isldigimizde koduyn anlamı değişmez

int to_opposite_case(int c)
{
    if(isupper(c))              //1
        return tolower(c);      //2

    return toupper(c);          //4

}

int main()
{
   printf("bir karakter girin : ");
   int c = getchar();

   printf("%c =====>  %c\n", c, to_opposite_case(c));


    return 0;
}

/*****************************************/
/*****************************************/


#include <stdio.h>
#include <ctype.h>

//yazıdaki rakam karaterlerinin sayısını sayan program


int main()
{
   printf("bir yazın girin : ");
   int ch;
   int count = 0;

   while ((ch = getchar()) != '\n') {
       if(isdigit(ch))
           ++count;
   }


    printf("%d  tane \n", count);

    return 0;
}

/*****************************************/
/*****************************************/

ternary operator -- conditional operator

koşul operatorü

3 operand alan operator

13. öncelik seviyesinde bulunmakta. sagdan sola (right associative)

14. atama operatorleri

15. virgül operatörü


 op1 ? op2 : op3;

 op1 dogru veya yanlıslıgına göre

dogru ise op2
yanlıs ise op3

 x > 10 ? x : y;

 x >= 0 = ? x : -x;  // mutlak deger


kosul operatorü sqwuence point olusturu


 x++ > 10 ? a : x  ---> buradaki x in artmıs degeridir


#include <stdio.h>
#include <ctype.h>

int max2(int a, int b)
{
    return a > b ? a : b;
}

int main()
{
    //
    //

    return 0;
}

/*****************************************/
/*****************************************/


   func(a > b ? a : b)

   if((x > y ? a : b) > 20)


 ---------------------------------------


 if(a > 10)
    x = b;
 else
    y = b;

    a > 10 ? x : y = b;

   L value olması lazım

   C de kosul operatörünün ürettiği deger R value bu işlem gecersiz

   C++ kosul operatörünün ürettiği deger Lvalue


#include <stdio.h>

int main()
{
    int a = 10, x = 3, b = 8, y = 5;

    if(a > 10)
        x = b;
    else
        y = b;

    a > 10 ? x : y = b; //kosul op. Rvalue deger urettiği için atama yapılamaz

    return 0;
}

/*****************************************/
/*****************************************/


#include <stdio.h>

int main()
{
    int a = 10, x = 3, b = 8, y = 5;

    if(a > 10)
        x = b;
    else
        y = b;

    *(a > 10 ? &x : &y) = b; //ileride pointer konusunda daha net anlayacagız

    return 0;
}

/*****************************************/
/*****************************************/


    a > 0 ? 5 : b > 0 ? 7 : 13;    //sagdan sola

    a > 0 ? 5 : (b > 0 ? 7 : 13);  // bu daha hos duruyor





#include <stdio.h>

int main()
{
    int x, y, z;

    printf("uc tam sayi giriniz : ");
    scanf("%d%d%d", &x, &y, &z);


    printf("%d\n", x > 10 ? 3:
                   y > 20 ? 7:
                   z > 30 ? 12: 57);

    printf("%d\n", x > 10 ? 3:(y > 20 ? 7: (z > 30 ? 12: 57)));


    return 0;
}

/*****************************************/
/*****************************************/


#include <stdio.h>

int main()
{
    int x = 10;
    int y = 10;
    int a = 7;
    double dval = 3.;

    printf("%f\n", (x > 5 ? y : dval) / 3);


    return 0;
}

/*****************************************/
/*****************************************/



loop statements

kod parcacıgının yenilemeli olarak yürütülmesine dongu deyimleri denir


3 tane dongu deyimimiz var


while statement
do while statement
for statement


-----------------------------


while statement

 while(expr)
     statement;


 while() // içi boş sentaks hatası
 while(;)  // ; atamu kullanırsam sentaks hatası
 while(expr)  // expr ifadesinin void türnde olamaz sentaks hatası



 while(expr)
     ++a;


while(expr){
     ++a;
     ++b;
     ////
   ///
}


while null statement durumları

while(expr)
   ;

while(expr)
{}


while(expr)
   ++a, ++b;

while(isprime(x))
    ///

while(x > 100)
    ///


zero --> dongu durur
non zero ---> donguye devam et


#include <stdio.h>

int main()
{
    int ch;

    printf("bir giris yapin : ");

    while ((ch = getchar()) != '\n') {
        printf("%c    %d\n", ch, ch);
    }


    return 0;
}

/*****************************************/
/*****************************************/

#include <stdio.h>

int main()
{
    int ch;

    printf("bir giris yapin : ");

    while (ch = getchar(), ch != '\n') {
        printf("%c    %d\n", ch, ch);
    }


    return 0;
}

/*****************************************/
/*****************************************/


#include <stdio.h>

int main()
{
    int i = 0;

    //dikkat
    while(i < 100)
        printf("%d ", i);
        ++i;

    return 0;
}

/*****************************************/
/*****************************************/

Tavsiyeler

1- git - github     ------------------------> svn  cvs
https://youtu.be/rWG70T7fePg


2- java
https://www.udemy.com/course/java-the-complete-java-developer-course/


3- C++
https://www.udemy.com/course/beginning-c-plus-plus-programming/


4- Python
https://www.udemy.com/course/100-days-of-code/


5- Gömülü sistem
https://www.youtube.com/c/StateMachineCOM

6- FPGA
https://www.youtube.com/watch?v=PstK7sQ3Tdk&list=PLZyLAHn509339oyv3vi-3Gdyb8bfPx7Ro



   C, C++
   Python, Java

   Gömülü sistem

   form --> istediği yazcaksınız

   sistem mühendis


   Fintech

   oyun motoru



  unity   -->  C#
  unreal engine  --> c++

   C dili -->

/*****************************************/
/*****************************************/


#include <stdio.h>

int main()
{
    int i = 0;

    while(i < 100)
        printf("%d ", i++);


    return 0;
}

/*****************************************/
/*****************************************/

#include <stdio.h>
//mulakat sorusu


#include <stdio.h>

int main()
{
    int i = 0;

   //ekrana ne yazdırır
    //i = 9
    //i = 10
    //i = 11
    while(i++ < 10)
        ; //null statement

    printf("%d \n", i);

    return 0;
}

/*****************************************/
/*****************************************/

while(1){  // infinite loop sonsuz loop


}


/*****************************************/
/*****************************************/


1- kosul ifadesinin yanlıs olması durumunda
 while(x < 100){}

2- break statement;
3- return statement;

while(expr)
{
  if(x == 5)
      return 1;

}


4- goto satement

while(expr)
{
  if(x == 5)
      goto out;

}

out:
    statement;


5- programın calismasını sonlandıran standart c fonksiyonu
   tabi bu fonksiyonları eğitimin ilerleten kısmında ele alacaz

   exit
   abort     fonksiyonlarıdır



while(expr)
{
  if(x == 5)
      exit(1);

}


------------------------------

#include <stdio.h>

#include <stdio.h>

int main()
{

    int n;

    printf("bir tamsayi giriniz : ");
    scanf("%d", &n);

    while (n-- > 0) {
        printf("%d. orhan\n", n);
    }


    return 0;
}

/*****************************************/
/*****************************************/

#include <stdio.h>

#include <stdio.h>

int main()
{

    int n;

    printf("bir tamsayi giriniz : ");
    scanf("%d", &n);

    while (n--) {
        printf("%d. orhan\n", n);
    }


    return 0;
}

/*****************************************/
/*****************************************/


#include <stdio.h>



int main()
{

    int n;

    printf("bir tamsayi giriniz : ");
    scanf("%d", &n);

    //gecerli
    //maximal munch kuralı


    while (n --> 0)
        printf("%d. orhan\n", n);

    return 0;
}

/*****************************************/
/*****************************************/

#include <stdio.h>

int power(int base, int exp)
{
    int result = 1;

    while(exp--){
        result *= base;
    }

    return result;
}

int main()
{

    int x, y;

    printf("iki tamsayi giriniz : ");
    scanf("%d%d", &x, &y);

    printf("%d ---> %d = %d\n", x, y, power(x, y));

    return 0;
}

/*****************************************/
/*****************************************/

#include <stdio.h>

int power(int base, int exp)
{
    int result = 1;

    while(exp--){
        result *= base;
    }

    return result;
}

int main()
{

    int ival;

    printf("bir tamsayi giriniz : ");
    scanf("%d", &ival);

    int i = 0;
    while(i < 10)
        printf("%d \n", power(ival, i++));

    return 0;
}

/*****************************************/
/*****************************************/

break deyimi

kullanımı

break;


bu deyimimn gecerli olması icin dongu deyiminin gövdesinde olması lazım
yada switch deyiminde kullanılması uygun
diger duruymalrda sentaks hatası


while(expr){
  statement;
  statement;
  statement;
  if(exp)
      break;

statement;
statement;

}
//buradan devam edecek



#include <stdio.h>

int isprime(int val){
    if(val == 0 || val == 1)
        return 0;

    if(val % 2 == 0)
        return val == 2;

    if(val % 3 == 0)
        return val == 3;

    if(val % 5 == 0)
        return val == 5;

    for(int k = 0; k * k <= val; k += 2)
        if(val % k == 0)
            return 0;

    return 1;
}

int main()
{
    int x, y;

    printf("iki tam sayi giriniz : ");
    scanf("%d%d", &x, &y);

    while(x < y) {
        if(isprime(x))
              break;
        ++x;
    }

    printf("x = %d\n", x);

    return 0;
}

/*****************************************/
/*****************************************/



while(1){}

for(;;){}





#include <stdio.h>
#include <conio.h>

int main()
{
    int c;

    printf("evet mi (e) hayir mi (h) : ");

    while(1){
        c = _getch();
        if(c == 'e'  || c == 'h')
            break;
    }

    putchar(c);
    putchar('\n');

    return 0;
}

/*****************************************/
/*****************************************/


#include <stdio.h>
#include <conio.h>

int main()
{
    int c;

    printf("evet mi (e) hayir mi (h) : ");

    while((c = _getch()) != 'e' && c != 'h')
        ;// null statment

    putchar(c);
    putchar('\n');

    return 0;
}

/*****************************************/
/*****************************************/


ödev sorusu


bir tam sayi girecek misiniz (e) (h)?
e
tam sayiyi girin : 33


bir tam sayi girecek misiniz (e) (h)?
e
tam sayiyi girin : 22


bir tam sayi girecek misiniz (e) (h)?
e
tam sayiyi girin : -123


......


bir tam sayi girecek misiniz (e) (h)?
h


toplamda 3455 sayi girişi yaptınız
ortalaması : 567
max : 7777
min : -123


array kullanılmayacak

// rand()


#include <stdio.h>
#include <conio.h>
#include <limits.h>

//2 byte -32768  32767
//4 byte -2147483648  2147483647


int main()
{
    int c;
    int ival;
    int sum = 0;
    int counter = 0;
    int max;
    int min;

    while (1) {
        printf("bir tamsayi girecekmisiniz (e) (h) : ");

        while((c = _getch()) != 'e' && c != 'h')
            ;// null statment

        printf("\n%c\n", c);
        if(c == 'h')
            break;

        printf("tam sayi girin : ");
        ival = (rand() % 2 ? 1 : -1) * rand();

        printf("%d\n", ival);


        if(counter == 0){
            min = max = ival;
        }else if(ival > max){
            max = ival;
        }else if(ival < min){
            min = ival;
        }

        ++counter;
        sum += ival;

    }

    if(counter == 0){
        printf("hic giris yapilmadi\n");
    } else {
        printf("toplam %d sayi girdiniz\n", counter);
        printf("ortalama = %d\n", (double)sum/counter); ///ileri konu
        printf("max = %d\n", max);
        printf("min = %d\n", min);

    }


    return 0;
}

/*****************************************/
/*****************************************/

nesnted loops -- ic ice döngü

while(exp1){
  while(exp2){

    if(exp)
      break;
 }
 statement a; //break ile cıktıgında buraya gelecek

}
statement b;


---------------------------


while(exp1){
  while(exp2){
      while(exp3){
         if(exp)
           goto OUT;
      }
 }
 statement a;

}
OUT: //etiket
statement b;

---------------------------

#include <stdio.h>
#include <conio.h>
#include <limits.h>

//Mülakat sorusu
//noktalı virgül atamonu kullanmadan gecerli C programı olacak
//ekrana "merhaba dunya" yazdıracak

int main()
{

    if(printf("Hello world\n")){}

    while(!printf("Hello world\n")){}

   switch(printf("Hello world\n")){}

}

/*****************************************/
/*****************************************/

continue statement

kullanımı

continue;

continue deyimini kullanabildigimiz yer sadece bir döngü gövdesibde kullanabiliriz



while(exp)
{
  statement1;
  statement2;
  statement3;
  if(expr)
     continue; //bu kısma yürütülür ve döngü başına gecer

 statement1;
 statement2;
 statement3;

}

#include <stdio.h>

int main()
{

    int i = 0;

    while (i++ < 100) {
        printf(".");
        if(i % 5 == 0)
            continue;
        printf("%d\n", i);
    }

}

/*****************************************/
/*****************************************/

do while statement -- deyimi

amacı donguye girmeden önce yapılması istenilenleri yapmak
ama dongu dogru ise aynı seyleri yapılsın değil ise yapılmasın


kullanımı

do{
 statement;

}while(expr);



#include <stdio.h>

int ndigit(int val)
{
    int digit_count = 0;

    do {
       ++digit_count;
        val /= 10;
    } while (val);

    return digit_count;
}

int main()
{

    int x;

    printf("bir tam sayi giriniz : ");
    scanf("%d", &x);

    printf("%d sayisi %d basamaklidir\n", x, ndigit(x));

}

/*****************************************/
/*****************************************/
#include <stdio.h>

int main()
{

    int x;

    do {
        printf("bir tam sayi giriniz : ");
        scanf("%d", &x);
    } while (x <0 || x >= 100);

    printf("girilen sayi = %d\n", x);

}

/*****************************************/
/*****************************************/


for statement

2 tane ; olması zorun

for(;;)  //sonsuz dongu denir
   statement;

for(exp1; exp2; exp3)
     satement;


for(f1(); f2(); f3())
    statement;




#include <stdio.h>

int main()
{

    int i;

    for(i = 0; i < 10; ++i){
        printf("%d\n", i);
    }

}

/*****************************************/
/*****************************************/


#include <stdio.h>

int main()
{

    int i = 0;

    for( ; i < 100; ){
        printf("%d\n", i);
        ++i;
    }

}

/*****************************************/
/*****************************************/


#include <stdio.h>

int main()
{

    for(int i = 0, k = 2; i < 100; ++i){
        printf("%d\n", i);
    }

}

/*****************************************/
/*****************************************/


#include <stdio.h>

int main()
{
    //C++ da sentaks hatası
    //C de gecerli

    int k = 0;
    for(int i = 0; i < 100; ++i){
      int i = 34;
      printf("%d . %d\n", k++, i);
    }

    //C de derleyici arka tarafta böyle yapıyor
    /*
    for(int i = 0; i < 100; ++i){
        {
            int i = 34;
            printf("%d\n", i);
        }
    }

    */

}

/*****************************************/
/*****************************************/


for(int i = 0; i < 10; ++i)
{
}


for(int i = 0; i < 10; ++i)
{
}


for(int i = 0; i < 10; ++i)
{
}





#include <stdio.h>

int main()
{
    //n kes donen dongu deyimi

    for(int i = 0; i < 20; ++i){
        printf("orhan\n");
    }

}

/*****************************************/
/*****************************************/


#include <stdio.h>

int main()
{

    int i, k;

    for(i = 0, k = 2; i < 200; ++i, i += k){
        printf("orhan\n");
    }

}

/*****************************************/
/*****************************************/

#include <stdio.h>

int main()
{

    for(int i = 0; i < 10; ++i);{
        printf("%d ", i);
    }

}

/*****************************************/
/*****************************************/


#include <stdio.h>



int main()
{
    for(int i = 0; i < 10; ++i)
        ;

    {
        printf("%d ", i); //sentaks hatası
    }
}

/*****************************************/
/*****************************************/



#include <stdio.h>

int main()
{
    for(int i = 0; i < 10; ++i){
        //
        continue;
        //
    }

}

/*****************************************/
/*****************************************/

amstrom sayilari

ub basamaklı sayinin basamak degerlerinin kupleri toplamına eşit olan sayı

abc  = a3 + b3 + c3

dort basamaklı sayinin basamak degerlerinin kupleri toplamına eşit olan sayı

abcd  = a4 + b4 + c4 + d4


#include <stdio.h>

int main()
{
    for(int i = 1000; i < 10000; ++i){

        int d1 = i / 1000;
        int d2 = i / 100 % 10;
        int d3 = i / 10 % 10;
        int d4 = i % 10;

        if(i == d1*d1*d1*d1 + d2*d2*d2*d2 + d3*d3*d3*d3 + d4*d4*d4*d4)
            printf("%d\n", i);

    }

}

/*****************************************/
/*****************************************/


#include <stdio.h>

//kalit --- henuz kanıtlamamıs matematiksel terim

/*sayıınn sureklı 2 ye bolunme kontrolu var
 * eger bolunmuyor ıse 3 katının 1 fazlası alınır
 * tekrar 2 ye bolunup bolunmedıgı kontrol edilir
 */

//45 136 68 34 17 52 26 13 40 20 10 5 16 8 4 2 1

int main()
{
    unsigned long long uval;
    printf("bir tam sayi giriniz : ");
    scanf("%llu", &uval);

    while (uval != 1) {
        printf("%llu\n", uval);
        if(uval % 2 == 0)
            uval /= 2;
        else
            uval = uval * 3 + 1;
    }

    printf("1\n");

}

/*****************************************/
/*****************************************/
#include <stdio.h>

int factorial(int n)
{
    int result = 1;

    for(int i = 1; i <= n; ++i)
        result *= i;

    return result;
}

//int 4 byte oldugu ıcın en fala 13 faktoriyele kadar gidebilirim yoksa tasar

int main()
{
    for(int i = 0; i < 13; ++i){
        printf("%d!  =  %d\n", i, factorial(i));
    }

}

/*****************************************/
/*****************************************/


#include <stdio.h>

long long factorial(int n)
{
    long long result = 1;

    for(int i = 1; i <= n; ++i)
        result *= i;

    return result;
}

//long long 8 byte oldugu ıcın en fala 20 faktoriyele kadar gidebilirim yoksa tasar

int main()
{
    for(int i = 0; i < 20; ++i){
        printf("%d!  =  %lld\n", i, factorial(i));
    }

}

/*****************************************/
/*****************************************/

#include <stdio.h>

//recursive func.
//oneliner func.
long long factorial(int n)
{
    return n <= 1 ? 1 : n * factorial(n-1);
}

int main()
{
    for(int i = 0; i < 20; ++i){
        printf("%d!  =  %lld\n", i, factorial(i));
    }

}

/*****************************************/
/*****************************************/

#include <stdio.h>

//(1/1) - (1/3) - (1/5) - (1/7) .....  pi/4 yakınsıyor

int main()
{
   int n;
   double sum = 0;

   printf("serinini kaç terimi toplansın: ");
   scanf("%d", &n);

   for (int i = 0; i < n; ++i) {
        if(i % 2 == 0)
            sum += 1./ (2 * i + 1);
        else
            sum -= 1./ (2 * i + 1);
   }

   printf("%lf\n", 4*sum);
}

/*****************************************/
/*****************************************/


#include <stdio.h>


int isprime(int x)
{
    if(x < 2)
        return 0;

    if(x % 2 == 0)
        return x == 2;

    if(x % 3 == 0)
        return x == 3;

    if(x % 5 == 0)
        return x == 5;

    for(int i = 7; i*i <= x; ++i){
        if(x % i == 0)
            return 0;
    }

    return 1;
}

int main()
{

    for(int i = 1875951000; i < 1875952000; ++i){
        if(isprime(i))
            printf("%d ", i);
    }

    printf("\n");


}

/*****************************************/
/*****************************************/

#include <stdio.h>

int ndigit(int x)
{
    int digit_count = 0;
    if(x == 0)
        return 1;
    while (x) {
        ++digit_count;
        x /= 10;
    }

    return digit_count;
}

int sumdigit(int x)
{
    int digit_sum = 0;

    while (x) {
        digit_sum += x % 10;
        x /= 10;
    }

    return digit_sum;
}

int dreverse(int x)
{
    int result = 0;

    while (x) {
        result = result * 10 + x % 10;
        x /= 10;
    }

    return result;
}

int main()
{
    int ival;
    printf("bir tam sayi giriniz : ");
    scanf("%d", &ival);

    printf("%d sayisisinin %d basamaklidir\n", ival, ndigit(ival));
    printf("%d sayisisinin basamak degerleri toplami %d\n", ival, sumdigit(ival));
    printf("%d sayisisinin tersi %d\n", ival, dreverse(ival));

}

/*****************************************/
/*****************************************/

ic ice donguler
nesnted loops

dongu(){
  dongu(){
   ...
 }
}




#include <stdio.h>

int main()
{

    for(int i = 0; i < 10; ++i)
        for(int k = 0; k < 20; ++k)
            printf("(%d %d)  ", i, k);

}

/*****************************************/
/*****************************************/
#include <stdio.h>

int main()
{

    for(int i = 0; i < 10; ++i){
        for(int k = 0; k < 20; ++k)
            printf("(%d %d)  ", i, k);
        printf("\n");
    }

}

/*****************************************/
/*****************************************/


#include <stdio.h>

int main()
{
    int count = 0;

    for(int i = 0; i < 10; ++i){
        for(int k = 0; k < 20; ++k){
          for(int j = 0; j < 30; ++j){
                    ++count;
          }
        }
    }

    printf("count = %d\n", count);
}

/*****************************************/
/*****************************************/

#include <stdio.h>


int main()
{
    for(int i = 1; i <= 9; ++i){
        for(int k = 0; k <= 9; ++k){
          for(int j = 0; j <= 9; ++j){
                printf("%d%d%d  ", i, j, k);
          }
        }
    }

}

/*****************************************/
/*****************************************/




#include <stdio.h>

//amstrom sayılarını bulmak

int main()
{
    int ival = 100;

    for(int i = 1; i <= 9; ++i){
        for(int k = 0; k <= 9; ++k){
          for(int j = 0; j <= 9; ++j){
              if(i*i*i + k*k*k + j*j*j == ival)
                  printf("%d\n", ival);
              ++ival;
          }
       }
    }

}

/*****************************************/
/*****************************************/



n = 5

*
**
***
****
*****


#include <stdio.h>

int main()
{

    int n;

    printf("bir tam sayi giriniz : ");
    scanf("%d", &n);

    for(int i = 1; i <= n; ++i){
        for(int j = 0; j < i; ++j){
            putchar('*');
        }
        putchar('\n');
    }

}

/*****************************************/
/*****************************************/


#include <stdio.h>

//48

// 2 2 2 2 3

int main()
{

    int n;

    printf("bir tam sayi giriniz : ");
    scanf("%d", &n);

    int x = 2; //ilk sal sayi degeri ile baslatık

    while (n != 1) {
        while (n % x == 0) {
            printf("%d ", x);
            n /= x;
        }
        ++x;
    }

}

/*****************************************/
/*****************************************/


#include <stdio.h>

/*soru
 * alttaki kodda tek bir karater silip veya ekleyip veya yer değiştirip
 * aynı cıktıyı elde etmek sitiyoruz
 */

int main()
{

    int n = 5;

    /*
    for(int i = 0; i < n; ++i)
        printf("orhan\n");
    */


    /*
    for(int i = 0; i < n; n--)
        printf("orhan\n");

        */

    /*
    for(int i = 0; -i < n; --i)
        printf("orhan\n");
    */

    for(int i = 0; i + n; --i)
        printf("orhan\n");

}

/*****************************************/
/*****************************************/




#include <stdio.h>

//soru
//ekrana ne yazdırır

int main()
{

    int i = 1;

    do {
        printf("%d\n", i);
        i++;
        if(i < 15)
            continue;
        //
    } while (0);


}

/*****************************************/
/*****************************************/


yorum satrıları -- comment lines

fonksiyon bildirimier fonksiyon prototipleri

önişlemci
switch
goto

tur donuşümü

rastgele sayi üretme

--------------
diziler --arrays

-------------------------

yorum satrıları -- comment lines


kaynak kodda bulundurulması gerekn bazi yazılar var
ama cevirici - derleyici program bunları görmezden gelir kaynak koddan cıkartılmıs olur


--önce acıklamalar koddan cıkartılıyor
--sonra önişlemci komutları yürütülüyor



C99 sadece yorum satırı olarak

/*
asdasdas
asdasd

*/

/* asdasd */



C99

//yorum

int x; // yarı capı gostersın


---------------------------------

en iyi acıklama hic yapılmayan acıklamadır


/*******************************
    file    :   string.h
    author  :   orhan ozturk
    update  :   12.12.2045

    Aim     :  bla bla ......

*******************************/


#include <stdio.h>



int main()
{

}

/*****************************************/
/*****************************************/



fonksiyon bildirimleri --- to declare a function (declaration)

onceden function definition gorduk
function call


fonksiyon hakkında bilgi dderleyiciye  ve okuyana veren,  buna fonksiyon bildirimi denir


fonksiyon tanımı ile bagımsızdır


function declaration
function prototype


#include <stdio.h>


int main()
{

    func();
    //derleyici namelookup -- berlirli alanlarda ismi araması yapıyor
    //bulmazsa sentaks hatası oluyor
    //c++ da kesin olarak hata

}

/*****************************************/
/*****************************************/

#include <stdio.h>

//C99 dan once farklılık var

//implicit function declaration olarak kabul edilir derleyici tarafından


int main()
{

    func();
    //derleyici namelookup -- berlirli alanlarda ismi araması yapıyor
    //bulmazsa sentaks hatası oluyor
    //c++ da kesin olarak hata

}

/*****************************************/
/*****************************************/


#include <stdio.h>

int foo(int, int);
int func(double);

int main()
{

    func(2, 33);
    //derleyici isim arar
    //bulur ama kodun tanımı ile ilgilenmez

}

/*****************************************/
/*****************************************/




#include <stdio.h>

int foo(int, int);
int func(double);

int main()
{

    int x = foo(12, 33);
    x = func(x);

}

/*****************************************/
/*****************************************/


#include <stdio.h>

int foo(int, int, double);

int main()
{

    int x = foo(1, 2, 3.5);
    x;
}




/*****************************************/
/*****************************************/
#include <stdio.h>

int foo(int, int, double);

int main()
{

    //narrowing  convertion
    //bilgi kaybı yasanır

    int x = foo(2.3, 4.5, 2);
    //2  4  2.0
}




/*****************************************/
/*****************************************/


#include <stdio.h>

int foo(int, int, double);

int main()
{

    //narrowing  convertion
    //bilgi kaybı yasanır

    foo(2.3, 4.5, 2);
    //2  4  2.0
}




/*****************************************/
/*****************************************/



#include <stdio.h>

//bildirim
int func(int, int);

int main()
{
    //call
    int x = func(2, 3);

    printf("x = %d\n", x);
}

//tanım
//parametreyi kullanmamız için ismi olmak zorunda
int func(int a, int b)
{
    return a+b;
}




/*****************************************/
/*****************************************/

#include <stdio.h>
#include "utility.h"

//aşağıdaki bildirimi yapılan func işlevinin değişkenlerinini
//olmadıgını söylemez
//parametreleri hakkında derleyicinin bir fikri yok
int func();

//derleyicinin bu fonksiyon bildiriminden anladıgı
//parametrelere sahip değil
int fooo(void);

//C++ iki durumda parametre yok demek anlamına gelir

int main()
{

    func(2, 3, 4);

    fooo(2, 3);

}



/*****************************************/
/*****************************************/

#include <stdio.h>
#include "utility.h"

//bir fonksiyonun bir çok bildirimini yapabilirm sentaks hatası değil
void func(int, int);
void func(int, int);
void func(int, int);
void func(int, int);
void func(int, int);

//bir fonksiyonun tanımı bir kere olur, aksi takdirde sentaks hatası

int main()
{

}


/*****************************************/
/*****************************************/

Header file

module de denebilir


baslık dosyasında  -- header file da neler bulunur

1- fonksiyon bildirimleri
2- makrolar -- önişlemci programa tanıtılan isimler
   object-like macro
   function-like macro
   ...
3- type alias
 typedef declaration

bunların bazılarını ilerleyn derlerde görecez



fakat static bir fonksiyon tanımlar isek
örnek
static int func()
{
  bu fonksiyon sadece kaynak dosya tarafıdan cagrılabilir

  baskası erişemez

}


------------------------------------------------

onişlemci preprocessor

donanımsal olarak hiç bir ilişki yok
metin işleyen anlamındadır


derleyici programın giriş programı gibi dir

onişlemci kendi komutlarını yürütür ve C dili ile alakası yoktur


ortak noktası # ile başlamaları

#   (null directive)
#include
#define
#undef
#if
#else
#elif
#ifdef
#ifndef
#line
#error
#pragma


derleyici bu komutları görmez derleyicinin işi gelince

bu komutların sonunda ; atamonu kullanmayınız

----------------------

conditional compiling (kosullu derleme)



#  //tek basına bir anlamı yok
   //görsel hizalama amacında kullanılır ve derleme aşamasında koddan cıkartılır

#include

bir baslık dosyasındaki bildirimleri o kaynak dosyanın içine yapıstırmak


//ikisinin amacı ismi verilen dosyanın içindeki bildirimleri kaynak dosyanın içina yapıstırmak

#include <stdio.h> //boyle kullanımlar standart dosylar için,
//defult directory de arar önceden belirleniştir
//include directory gelir ararım
//bazen derleyicilerde standart olmayan yada olmasada bu directory kendi baslık dosyalarını koyabilir

#include "utility.h" //programcı tarafından tanımlanan dosyalarda kullanılır
//kaynak dosyanın bulundugu dizinde ara
//eger bulamazsa gider default directory arar.



koşullu derleme

#if  KOSUL //bu da dogru ise arada kalanı derleyecek eger dogru değil ise burayı pas gececek
 void func()
 //
 //

#endif










































































































































































































































































































































































































































































































































































































