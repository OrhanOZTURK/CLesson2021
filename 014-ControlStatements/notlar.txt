
Kontrol deyimleri -- Control Statements


if statement

while
do while
for

switch
goto

break
continue

return

--------------------------------

if statement

if --> anahtar sözcük
else --> anahtar sözcük


if(expr)  --> //void türünden olmayacak

non-zero ise ifade -- true
zero ise ifade ---> false


if(expr)


else if(expr)


else


----------------

if(expr)
  statement; //true path


compound statement -- birleşik deyim

if(expr){
 statement1;
 statement2;
 statement3;
}


---------------------------

  Null statement

  if(expr)
     ;

  if(expr)
   {}


--------------------------------------

 if(x != 0)  --> if(x) yazabilirim


 if sequence point tir

 if(x++ > 10)

dikkat

 x = 10;

 if(x++ > 10)


#include <stdio.h>

int main()
{
    int x = 9;

    if(x++ > 10)
        printf("dogru\n");
    else
        printf("yanlis\n");

    return 0;
}

/*****************************************/
/*****************************************/

#include <stdio.h>

int foo(void);

int main()
{
    int x;

    if((x = foo()) > 10)
        printf("dogru\n");
    else
        printf("yanlis\n");

    return 0;
}

/*****************************************/
/*****************************************/


x = 6

if(x == 5) // yyanlıs
if(x = 5) // dogru

if(x & y) //&& yazmak istediğim yerde


int func();

if(func) // gecerli // always true


#include <stdio.h>

int foo(void)
{
    printf("foo cagrildi\n");
    return 0;
}

int main()
{
    if(foo())
        printf("orhn cagrildi\n");

    return 0;
}

/*****************************************/
/*****************************************/


if with initialize durumu gecerli degil

#include <stdio.h>

int foo(void)
{
    return 12;
}

int main()
{

    if(int x = foo(), x > 0)
        printf("orhn cagrildi\n");

    return 0;
}

/*****************************************/
/*****************************************/

#include <stdio.h>

int main()
{

   int c;

   c = getchar();
   if(c != '\n'){
        //dothis
   }

   if(c = getchar(), c != '\n'){
        //dothis
   }

   if((c = getchar()) != '\n'){
        //dothis
   }



    return 0;
}

/*****************************************/
/*****************************************/

  if(expr)
     statement; //true path
  else
     statement; //false path


#include <stdio.h>

int main()
{

   int x;

    printf("bir tam sayi giriniz : ");
    scanf("%d", &x);

    if(x % 2 == 0)
        printf("%d cift sayi\n", x);
    else
        printf("%d tek sayi\n", x);


    return 0;
}

/*****************************************/
/*****************************************/

   dangling else


   bu else kimin

 kendisine en yakın if'in elsi dir



if(x > 10)
  if(x > 20)
    ++a;
  else
   a *= 2;



#include <stdio.h>


//redundancy

int abs(int x)
{
    if(x > 0)
        return x;

    return -x;
}

int main()
{

    return 0;
}

/*****************************************/
/*****************************************/



  if(x != 0)
     y = x;
  else
     y = 0;


#include <stdio.h>

//mülakat soru
//daha basit  nasıl yazabiliriz

int main()
{
    int x = 10, y = 20;

    if(x != 0)
       y = x;
    else
       y = 0;

    // y = x

    return 0;
}

/*****************************************/
/*****************************************/



  if(x == 1)
     ++a;

  if(x == 3)
    ++b;

  if(x == 8)
     foo();


--------

  else if merdiveni --- cascaded if kullanaibliriz


if(x == 1)
   ++a;
else if(x == 3)
  ++b;
else if(x == 8)
   foo();
else if(x == 10)
  //
else if(x == 12)
  //
else if(x == 15)
  //
else if(x == 17)



switch anahatarı if else göre daha iyi optimizayonnu vardır


/********************************************************/


  test fonksiyonları

  test function
  query function
  predicate


 unary predicate
 binary predicate


 test fonksiyonları geri dönüşü bool
 C de bool yerine int kullanıyoruz


 //asal sayı kontrolu
 int isprime(int);

zero -- false
non zero -- true
     -1            1
 if(isprime(x) == isprime(y))
 {

 }

  if(!!isprime(x) == !!isprime(y))
  {

  }





#include <stdio.h>

int iseven(int x)
{
    return x % 2 == 0;
}


int isodd(int x)
{
    //return x % 2 != 0;
    return x % 2;
}


int main()
{


    return 0;
}

/*****************************************/
/*****************************************/


artık yıl sınaması
leap year

  4'e tam bolunmesi şart
   -ya 100'e tam bölünecek
   -yada 400'e tam bölünecek





#include <stdio.h>

//one-linear function
int isleap(int y)
{
    /*
    if(y % 4 == 0 && (y % 100 != 0 || y % 400 == 0))
        return 1;

    return 0;
    */

    return y % 4 == 0 && (y % 100 != 0 || y % 400 == 0);
}


int main()
{

    int x;

    printf("bir yil girelim\n");
    scanf("%d", &x);

    if(isleap(x))
        printf("x : %d artik yildir\n", x);
    else
        printf("x : %d artik yil degildir\n", x);

    return 0;
}

/*****************************************/
/*****************************************/

perfect number
mükemmel sayi


kendisi hariç bölenlerinin toplamı kendisine eşit olan sayı 'dır

6
1 + 2 + 3 == 6

28
1 + 2 + 4 + 7 + 14 == 28


#include <stdio.h>

int isperfect(int x)
{
    int sum = 0;

    for(int i = 1; i <= x/2; ++i){
        if(x % i == 0)
            sum += i;
    }

    return sum == x;
}


int main()
{

    for(int i = 2; i < 10000; ++i){
        if(isperfect(i))
            printf("%d is perfect!\n", i);
    }

    return 0;
}

/*****************************************/
/*****************************************/


  <ctype.h>   baslık dosyasını inceleyeceğiz

test fonksiyonları mevcut kutupohanede yogunluklu olarak
2 tane fonksiyonu convert fonksyionu


test fonksiyonları "is" ile başlar isimleri

int isupper(int ch);  //karaterin buyuk harf olup olmadıgını kontrol eder
int islower(int ch);  //karaterin kucuk harf olup olmadıgını kontrol eder
int isalpha(int ch);  //harf katarateri kontrolu
int isdigit(int ch);  // sayi karateri kontrolu
int isalnum(int ch);  // alfa numerik
int isxdigit(int ch); // hexidecimal sayi sistemindeki karateri kontrolu
int isspace(int ch);
int ispunct(int ch);
int isprint(int ch);
int isgraph(int ch); //bosluk karateri false
int isblank(int ch); // C99 ile eklendi space yada tab karateri kontrolu
int iscntrl(int ch); // kontrol karateri kontrolu







#include <stdio.h>
#include <ctype.h>

int main()
{
    int c;

    printf("bir karater giriniz : ");
    c = getchar();

    if(isupper(c)){
        printf("buyuk harf\n");
    }else{
        printf("buyuk harf degil\n");
    }

    return 0;
}

/*****************************************/
/*****************************************/




#include <stdio.h>
#include <ctype.h>

int main()
{
    int c;

    printf("bir karater giriniz : ");
    c = getchar();

    if(isupper(c)){
        printf("isupper true\n");
    }

    if(islower(c)){
        printf("islower true\n");
    }


    if(isalpha(c)){
        printf("isalpha true\n");
    }

    if(isdigit(c)){
        printf("isdigit true\n");
    }


    if(isalnum(c)){
        printf("isalnum true\n");
    }

    if(isxdigit(c)){
        printf("isxdigit true\n");
    }


    if(isspace(c)){
        printf("isspace true\n");
    }


    if(ispunct(c)){
        printf("ispunct true\n");
    }


    return 0;
}

/*****************************************/
/*****************************************/



#include <stdio.h>
#include <ctype.h>

int main()
{
    printf("isupper\n");

    for(int i = 0; i < 128; ++i){
        if(isupper(i)){
            printf("%c ", i);
        }
    }

    printf("\n");

    printf("islower\n");

    for(int i = 0; i < 128; ++i){
        if(islower(i)){
            printf("%c ", i);
        }
    }

     printf("\n");




    printf("isalpha\n");

    for(int i = 0; i < 128; ++i){
        if(isalpha(i)){
            printf("%c ", i);
        }
    }

     printf("\n");

    printf("isdigit\n");

    for(int i = 0; i < 128; ++i){
        if(isdigit(i)){
            printf("%c ", i);
        }
    }

     printf("\n");

    printf("isalnum\n");

    for(int i = 0; i < 128; ++i){
        if(isalnum(i)){
            printf("%c ", i);
        }
    }

     printf("\n");

    printf("isxdigit\n");

    for(int i = 0; i < 128; ++i){
        if(isxdigit(i)){
            printf("%c ", i);
        }
    }

     printf("\n");


    printf("isspace\n");

    for(int i = 0; i < 128; ++i){
        if(isspace(i)){
            printf("%d ", i);
        }
    }

     printf("\n");

    printf("ispunct\n");

    for(int i = 0; i < 128; ++i){
        if(ispunct(i)){
            printf("%c ", i);
        }
    }

     printf("\n");

    return 0;
}

/*****************************************/
/*****************************************/

#include <stdio.h>
#include <ctype.h>
#include <stdlib.h>
#include <time.h>
#include <Windows.h>

int main()
{
    srand((unsigned) time(0));

    for(;;){
        int c = rand() % 128;
        if(isprint(c)){
            //Sleep(50);
            _sleep(50);
            putchar(c);
        }
    }

    return 0;
}

/*****************************************/
/*****************************************/


dönüşüm fonksiyonları

int toupper(int ch);  // buyuk harfe cevir, eger kcuuk harf göndermezsek aynı karakterin kod numarasını döndürür
int tolower(int ch);  // kucuk harfe cevir, eger buyuk harf göndermezsek aynı karakterin kod numarasını döndürür


#include <stdio.h>
#include <ctype.h>


int main()
{
    int c;

    printf("bir karakter giriniz : ");
    c = getchar();

    printf("%c ====> %c\n",c, toupper(c));
    printf("%c ====> %c\n",c, tolower(c));


    return 0;
}

/*****************************************/
/*****************************************/


soru


#include <stdio.h>
#include <ctype.h>


int main()
{
    int c1, c2;

    printf("iki karakter giriniz : ");
    c1 = getchar();
    c2 = getchar();

    //if(c1 == c2)
    if(toupper(c1) == toupper(c2)){
        printf("%c ve %c ayni karaterler\n", c1, c2);
    }else {
        printf("%c ve %c farkli karaterler\n", c1, c2);
    }


    return 0;
}

/*****************************************/
/*****************************************/
#include <stdio.h>
#include <ctype.h>

//buyuk harf için kucuk harfi
//kucuk harf için buyuk harfi
//ikiside değil ise karater kod numarasını döndür

int to_opposite_case(int c)
{
    if(isupper(c))
        return tolower(c);

    if(islower(c))
        return toupper(c);

    return c;
}

int main()
{
   printf("bir karakter girin : ");
   int c = getchar();

   printf("%c =====>  %c\n", c, to_opposite_case(c));


    return 0;
}

/*****************************************/
/*****************************************/


#include <stdio.h>
#include <ctype.h>

//bu satırlardan 2 tanesinin isldigimizde koduyn anlamı değişmez

int to_opposite_case(int c)
{
    if(isupper(c))              //1
        return tolower(c);      //2

    return toupper(c);          //4

}

int main()
{
   printf("bir karakter girin : ");
   int c = getchar();

   printf("%c =====>  %c\n", c, to_opposite_case(c));


    return 0;
}

/*****************************************/
/*****************************************/


#include <stdio.h>
#include <ctype.h>

//yazıdaki rakam karaterlerinin sayısını sayan program


int main()
{
   printf("bir yazın girin : ");
   int ch;
   int count = 0;

   while ((ch = getchar()) != '\n') {
       if(isdigit(ch))
           ++count;
   }


    printf("%d  tane \n", count);

    return 0;
}

/*****************************************/
/*****************************************/

ternary operator -- conditional operator

koşul operatorü

3 operand alan operator

13. öncelik seviyesinde bulunmakta. sagdan sola (right associative)

14. atama operatorleri

15. virgül operatörü


 op1 ? op2 : op3;

 op1 dogru veya yanlıslıgına göre

dogru ise op2
yanlıs ise op3

 x > 10 ? x : y;

 x >= 0 = ? x : -x;  // mutlak deger


kosul operatorü sqwuence point olusturu


 x++ > 10 ? a : x  ---> buradaki x in artmıs degeridir


#include <stdio.h>
#include <ctype.h>

int max2(int a, int b)
{
    return a > b ? a : b;
}

int main()
{
    //
    //

    return 0;
}

/*****************************************/
/*****************************************/


   func(a > b ? a : b)

   if((x > y ? a : b) > 20)


 ---------------------------------------


 if(a > 10)
    x = b;
 else
    y = b;

    a > 10 ? x : y = b;

   L value olması lazım

   C de kosul operatörünün ürettiği deger R value bu işlem gecersiz

   C++ kosul operatörünün ürettiği deger Lvalue


#include <stdio.h>

int main()
{
    int a = 10, x = 3, b = 8, y = 5;

    if(a > 10)
        x = b;
    else
        y = b;

    a > 10 ? x : y = b; //kosul op. Rvalue deger urettiği için atama yapılamaz

    return 0;
}

/*****************************************/
/*****************************************/


#include <stdio.h>

int main()
{
    int a = 10, x = 3, b = 8, y = 5;

    if(a > 10)
        x = b;
    else
        y = b;

    *(a > 10 ? &x : &y) = b; //ileride pointer konusunda daha net anlayacagız

    return 0;
}

/*****************************************/
/*****************************************/


    a > 0 ? 5 : b > 0 ? 7 : 13;    //sagdan sola

    a > 0 ? 5 : (b > 0 ? 7 : 13);  // bu daha hos duruyor





#include <stdio.h>

int main()
{
    int x, y, z;

    printf("uc tam sayi giriniz : ");
    scanf("%d%d%d", &x, &y, &z);


    printf("%d\n", x > 10 ? 3:
                   y > 20 ? 7:
                   z > 30 ? 12: 57);

    printf("%d\n", x > 10 ? 3:(y > 20 ? 7: (z > 30 ? 12: 57)));


    return 0;
}

/*****************************************/
/*****************************************/


#include <stdio.h>

int main()
{
    int x = 10;
    int y = 10;
    int a = 7;
    double dval = 3.;

    printf("%f\n", (x > 5 ? y : dval) / 3);


    return 0;
}

/*****************************************/
/*****************************************/



loop statements

kod parcacıgının yenilemeli olarak yürütülmesine dongu deyimleri denir


3 tane dongu deyimimiz var


while statement
do while statement
for statement


-----------------------------


while statement

 while(expr)
     statement;


 while() // içi boş sentaks hatası
 while(;)  // ; atamu kullanırsam sentaks hatası
 while(expr)  // expr ifadesinin void türnde olamaz sentaks hatası



 while(expr)
     ++a;


while(expr){
     ++a;
     ++b;
     ////
   ///
}


while null statement durumları

while(expr)
   ;

while(expr)
{}


while(expr)
   ++a, ++b;

while(isprime(x))
    ///

while(x > 100)
    ///


zero --> dongu durur
non zero ---> donguye devam et


#include <stdio.h>

int main()
{
    int ch;

    printf("bir giris yapin : ");

    while ((ch = getchar()) != '\n') {
        printf("%c    %d\n", ch, ch);
    }


    return 0;
}

/*****************************************/
/*****************************************/

#include <stdio.h>

int main()
{
    int ch;

    printf("bir giris yapin : ");

    while (ch = getchar(), ch != '\n') {
        printf("%c    %d\n", ch, ch);
    }


    return 0;
}

/*****************************************/
/*****************************************/


#include <stdio.h>

int main()
{
    int i = 0;

    //dikkat
    while(i < 100)
        printf("%d ", i);
        ++i;

    return 0;
}

/*****************************************/
/*****************************************/

Tavsiyeler

1- git - github     ------------------------> svn  cvs
https://youtu.be/rWG70T7fePg


2- java
https://www.udemy.com/course/java-the-complete-java-developer-course/


3- C++
https://www.udemy.com/course/beginning-c-plus-plus-programming/


4- Python
https://www.udemy.com/course/100-days-of-code/


5- Gömülü sistem
https://www.youtube.com/c/StateMachineCOM

6- FPGA
https://www.youtube.com/watch?v=PstK7sQ3Tdk&list=PLZyLAHn509339oyv3vi-3Gdyb8bfPx7Ro



   C, C++
   Python, Java

   Gömülü sistem

   form --> istediği yazcaksınız

   sistem mühendis


   Fintech

   oyun motoru



  unity   -->  C#
  unreal engine  --> c++

   C dili -->

/*****************************************/
/*****************************************/
























































































































































































