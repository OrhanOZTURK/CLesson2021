
input - output operatoins
Giriş Çıkış işlemleri

std. kütüphanede formatlı giriş çıkış işlemlerin yapan fonksiyonlar
printf
scanf

C nin std . ktühanesi ---> <stdio.h>

C++ std. ktüp. ---> <iostream>


giriş akımı --> input stream
çıkış akımı --> output stream


--------------

stdandard output ---> demek ekrana yamak demektir
default olarak ekrana baglıdır

Fakat biz bu standard output'u yönlendirebiliriz


standard input

programın çalışmasıyla başlayan giriş akımı
default olarak klavyeye baglıdır


Fakat biz bu standard input'u yönlendirebiliriz


----------------------------------------------

giriş çıkış işlemlerinde formatlı formatsız yapı


unformatted  ---> bellekte kullanılan byt ların hiç oynamadan gönderme işlemidir
formatted ----> bellekte tutulan byte karaterlerini sabitlerine çevirme gönderme işlemi



unformatted  --- byte gönderme

00001111
00000000


formated  -- - yazının karakterlerini gönderme

int x = 15;

49 53 --> 15 ASCII degerlerinin gönderilmesi -- insanların anlayacagı sekilde gönderme biçimi


--------------------------------------------

C nnin std. kutuphanesindeki printf fonksiyonu formatlı çıkış yapan c fonksiyonudur

printf == printformat   tan gelir


---------------------------------

 x = 15

4953

---------------------------------

formatlı giriş çıkış ilemleri fonksiyonlar

printf
scanf

sprintf  --> belleğe
fprintf ---> dosyaya

sscanf
fscanf


----------------------------------------

integer --- tam sayı


65   ----->> 65 -- onluk
     ------  41   -- 16 lık sıstem
     ------  101  -- 8 lık sayı sistemi


0x41
0101

0x1ab5
0X1AB5

----------------------------


output width  ----> yazma alanı genişliği

int x = 456;

456
     456


65  orhan
123243  hakan
123  ayşe


fill character

65___ orhan
123243%%% hakan
123/// ayşe

------------------------------------

gerçek sayı -- float formatlama

yazma biçimleri

fixed  ---> 1.234234
scientific ---> 3.5e12


precision --- hasssaiyet
noktadan sonra kaç basamak yazılmalı


chaining --
Birden fazla ifadenin degerinin yazdırılması

bunu nasıl yapıyorduk

variadic fonksiyonlarla

----------------------------------------

printf fonksiyonu

<stdio.h> ktuphanesinde yer alır


int printf(const char *p, ...);

printf fonksiyonuna en az bir parametre göndermek zorundayız


string literalleri

"Orhan" --> char *

printf("Orhan"); ---> yapılan sey parametreye adres gönderme char türünden

#include <stdio.h>

int main()
{
    // 'O' 'r' 'h' 'a' 'n' '\0'

    //printf("Orhan\n");
    //printf("Orhan\nOZTURK\nMustafaOZTURK\n");

    printf("Orhan\tOZTURK\t123\nMustafa\tOZTURK\t555\n");


    return 0;
}



------------------------------------------


#include <stdio.h>

int main()
{

    printf("\x42URS\x41\n");

    return 0;
}

/**************************/

#include <stdio.h>

int main()
{
    printf("\102\101\102\101\012");

    return 0;
}

/**************************/


#include <stdio.h>

int main()
{
    int n = printf("hello world\n");

    printf("n : %d\n", n);

    return 0;
}

/**************************/


#include <stdio.h>

int main()
{
    int n = printf("\102\101\102\101\012");

    printf("n : %d\n", n);

    return 0;
}

/**************************/


printf ile bir yada birden fazla ifadenin degerinin / degerlerinin std.çıkış akımına
yazdırma işlemleri


ifade  --> a , 10 , 5 + b



Nasıl  bu ifadeleri 10luk - 16lık- 8lık sisteme göre yazdıracaz ?


%... --> yuzde ve yuzdeden sonra gelen n tane karateri yorumlar printf


#include <stdio.h>

int main()
{
    // eger format karaterine argüman verilmezse çöz deger yazdırır
    int x = 10;
    printf("n : %d\n");

    return 0;
}

/*******************************/
/*******************************/

#include <stdio.h>

// x = 20
// orhan

int main()
{
    int x = 20;
    printf("x = %d\norhan\n", x);

    return 0;
}

/*******************************/
/*******************************/
#include <stdio.h>

int main()
{
    //soru
    int x = 20;

    printf("degeri = %d\n", x*2 + x); //2 tane argüman gönderilmiştir

    //%d --> işaretli int türünden ifadeinin degernin 10 luk - decimal olarak yazdır demek

    return 0;
}

/*************************************/
/*************************************/
#include <stdio.h>

int main()
{
    //soru
    int x = 20;

    printf("degeri = %o\n", x);

    //%o --> işaretli int türünden ifadeinin degernin 8 luk - decimal olarak yazdır demek

    return 0;
}

/*************************************/
/*************************************/

#include <stdio.h>

int main()
{
    //soru
    int x = 20;

    printf("degeri = %x\n", x);

    //%x --> işaretli int türünden ifadeinin degernin 16 luk - decimal olarak yazdır demek

    return 0;
}

/*************************************/
/*************************************/
#include <stdio.h>

int main()
{

    int x = 10, y = 20, z = 30;

    printf("x = %d\ny = %d\nz = %d\n", x, y, z);

    return 0;
}

/*************************************/
/*************************************/

#include <stdio.h>

int main()
{

    int x, y;
    printf("iki tam sayi giriniz : ");
    scanf("%d%d", &x, &y);

    // 10 * 10 + 20 * 20 = 500

    printf("%d * %d + %d * %d = %d \n", x, x, y, y, x*x + y*y);

    return 0;
}

/*************************************/
/*************************************/


#include <stdio.h>

int main()
{

    // double türünü yazdırmak için  %f format kullanılır
    double dval = 3.333;

    printf("dval = %f\n", dval);

    return 0;
}

/*************************************/
/*************************************/

#include <stdio.h>
#include <math.h>

int main()
{
    for(int i = 0; i <= 100; ++i)
    {
        printf("%d--->%f\n", i, sqrt(i));
    }

    return 0;
}

/*************************************/
/*************************************/

#include <stdio.h>
#include <math.h>

int main()
{
    for(int i = 0; i <= 100; ++i)
    {
        printf("%3d--->%f\n", i, sqrt(i));
    }

    return 0;
}

/*************************************/
/*************************************/
#include <stdio.h>
#include <math.h>

int main()
{

    int x = -234;
    unsigned y = 123;

    printf("x = %d\ny = %u\n", x, y);

    return 0;
}

/*************************************/
/*************************************/
#include <stdio.h>
#include <math.h>

int main()
{
    double dval = 3.333;

    printf("x = %d\n", dval); //tanımsız davranış

    return 0;
}

/*************************************/
/*************************************/

#include <stdio.h>
#include <math.h>

int main()
{
    int ival;
    printf("bir tam sayi giriniz : ");
    scanf("%d", &ival);

    printf("decimal     : %d\nhex   : %x\noctal     : %o\n", ival, ival, ival);


    return 0;
}

/*************************************/
/*************************************/
#include <stdio.h>
#include <math.h>

//%c bir tam sayı ifadesiinin karaterini gösteren format
int main()
{
    int ival;
    printf("bir tam sayi giriniz : ");
    scanf("%d", &ival);

    printf("%d kod numarali karater  %c\n", ival, ival);

    return 0;
}

/*************************************/
/*************************************/


#include <stdio.h>
#include <math.h>

//%c bir tam sayı ifadesiinin karaterini gösteren format
int main()
{
    for(int i = 0; i < 127; ++i)
    {
        printf("%d kod numarali karater  %c\n", i, i);
    }
    return 0;
}

/*************************************/
/*************************************/
#include <stdio.h>
#include <math.h>

//%c bir tam sayı ifadesiinin karaterini gösteren format
int main()
{
    for(int i = 0; i < 127; ++i)
    {
        printf("%3d kod numarali karater  %c\n", i, i);
    }
    return 0;
}

/*************************************/
/*************************************/
#include <stdio.h>
#include <math.h>

int ndigit(int val)
{
    if(val == 0)
        return 1;

    int digit_count = 0;

    while (val) {
        ++digit_count;
        val /= 10;
    }

    return digit_count;
}

int main()
{
    int ival;
    printf("bir tam sayi giriniz : ");
    scanf("%d", &ival);

    printf("%d sayisi %d basamaklidir\n", ival, ndigit(ival));
    return 0;
}

/*************************************/
/*************************************/


#include <stdio.h>
#include <math.h>

int main()
{
    int x = 1, y = 2, z = 3;

    printf("x = %d\n", x);
    printf("y = %d\n", y);
    printf("z = %d\n", z);

    return 0;
}

/*************************************/
/*************************************/


#include <stdio.h>
#include <math.h>

//Mulakat Sorusu

int main()
{
    int x = 12345;

    //1234551
    printf("%d\n", printf("%d", printf("%d", x)));

    return 0;
}

/*************************************/
/*************************************/


#include <stdio.h>
#include <math.h>

int main()
{
    double base, exp;
    printf("iki gercek sayi giriniz : ");
    scanf("%lf%lf", &base, &exp);

    printf("%f sayisinin %f. kuvveti = %f\n", base, exp, pow(base, exp));


    return 0;
}

/*************************************/
/*************************************/


#include <stdio.h>
#include <math.h>

// printf % karekteri escape oalrak kullanılır
// % yazdırmak ıstyorum

// %%


int main()
{
    int x, y;
    printf("iki tam sayi giriniz : ");
    scanf("%d%d", &x, &y);

    printf("%d %% %d = %d\n", x, y, x % y);


    return 0;
}

/*************************************/
/*************************************/


scanf

<stdio.h>

scanf --> variadic fonksiyon

scanf --> call by reference

formatlama var

%... formatı soyler

%d----> int türü
%u ---> işaretsiz değişken

int scanf(const char *p, ...); --> variadic function




#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>


int main()
{
    int x;
    printf("bir tam sayi giriniz : ");
    scanf("%d", &x);

    printf("x = %d \n", x);


    return 0;
}

/*************************************/
/*************************************/


#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>


int main()
{
    int x;
    printf("bir tam sayi giriniz : ");
    scanf("%x", &x);

    printf("x = %d \n", x);


    return 0;
}

/*************************************/
/*************************************/

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>


int main()
{
    int x;
    printf("bir tam sayi giriniz : ");
    scanf("%o", &x);

    printf("x = %d \n", x);


    return 0;
}

/*************************************/
/*************************************/




standard input buffer

asd123

scanf --> satır tamponlu bir formatlı giriş fonksiyonudur --> line-buffered

enter tusuu --> newline  gelene bekler



#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>


int main()
{
    //123orhan
    //orhan hala buffer bekliyor
    int x;
    printf("bir tam sayi giriniz : ");
    scanf("%d", &x);

    printf("x = %d \n", x);


    return 0;
}

/*************************************/
/*************************************/


#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>


int main()
{
    //14B3.7

    int x;
    printf("bir tam sayi giriniz : ");
    //scanf("%d", &x);
    scanf("%x", &x);

    printf("x = %x \n", x);


    return 0;
}

/*************************************/
/*************************************/


#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>


int main()
{
    //14B3.7

    int x;
    printf("bir tam sayi giriniz : ");
    //scanf("%d", &x);
    //scanf("%x", &x);
    scanf("%o", &x);


    printf("x = %o \n", x);


    return 0;
}

/*************************************/
/*************************************/

Not

  double in türü scanf te %lf
  printf te --> %f

Not: Scanf bosluk karakterlerini atlar yok sayar


#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>


int main()
{
    int ival;
    double dval;

    printf("bir tam sayi giriniz : ");
    scanf("%d%lf", &ival, &dval);

    printf("ival = %d \n", ival);
    printf("dval = %f \n", dval);

    return 0;
}

/*************************************/
/*************************************/



#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>


int main()
{
    int ival;
    double dval;
    int x;

    printf("bir tam sayi giriniz : ");
    scanf("%d%lf%x", &ival, &dval, &x);

    printf("ival = %d \n", ival);
    printf("dval = %f \n", dval);
    printf("x = %x\n", x);

    //li hala bufferda

    return 0;
}

/*************************************/
/*************************************/


int scanf(....

scanf --> 0 döndürürse başarısız



#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>


int main()
{
    int ival;

    printf("bir tam sayi giriniz : ");
    int retval = scanf("%d", &ival);

    printf("retval = %d \n", retval);


    return 0;
}

/*************************************/
/*************************************/

scanf("%d%d%d", &x, &y, &z);

x y z set ederse ---> 3

x y set etti --> 2
x -----> 1
hiç set edemedi ---> 0



#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>


int main()
{
    int x, y, z;

    printf("bir tam sayi giriniz : ");
    int retval = scanf("%d%d%d", &x, &y, &z);

    printf("retval = %d \n", retval);

    return 0;
}

/*************************************/
/*************************************/


#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>


int main()
{
    int x;

    while(1)
    {
        printf("bir tam sayi giriniz : ");
        int retval = scanf("%d", &x);  //ali 3

        if(retval == 1)
            break;
    }

    //printf("retval = %d \n", retval);

    return 0;
}

/*************************************/
/*************************************/

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>


void clear_input_buffer(void)
{
    int ch;

    while((ch = getchar()) != '\n' && ch != EOF)
    {
        //
    }
}


int main()
{
    int x;

    while(1)
    {
        printf("bir tam sayi giriniz : ");
        int retval = scanf("%d", &x);  // 3 ali

        if(retval == 1)
            break;

        clear_input_buffer();
    }

    /*
    int ch;

    //Homework // 3 ali
    scanf("%c", &ch);

    printf("c = %c \n", ch);
    */

    return 0;
}

/*************************************/
/*************************************/

getchar fonksiyonu

int getchar(void);

std. inputtan ilk karateri alıyo onun tam sayı degerini donduruyor

line buffer



#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>

int main()
{
    int x;

    printf("bir tam sayi giriniz : ");

    x = getchar();

    printf("x = %d\n", x);

    return 0;
}

/*************************************/
/*************************************/

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>


//scanf ve getchar aynı buffer paylaşır

int main()
{
    int x, y;
    int c;

    printf("bir giris yapiniz : ");

    scanf("%d", &x);

    c = getchar();

    scanf("%d", &y);


    printf("x = %d\n", x);
    printf("c = %d\n", c);
    printf("y = %d\n", y);

    return 0;
}

/*************************************/
/*************************************/

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>


//scanf ve getchar aynı buffer paylaşır

int main()
{
    int c;

    printf("evet mi [e] hayir mi [h] : ");
    c = getchar();

    if(c == 'e')
        printf("evet dediniz\n");
    else if(c == 'h')
        printf("hayir dediniz\n");
    else
        printf("yanitiniz gecersiz\n");

    return 0;
}

/*************************************/
/*************************************/

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>


int main()
{
    int c;

    printf("bir yazi giriniz : ");

    while((c = getchar()) != '\n'){
        printf("%c        %d\n", c, c);
    }

    return 0;
}

/*************************************/
/*************************************/

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>


int main()
{
    int c;

    printf("bir tam sayi giriniz : ");

    while((c = getchar()) != '\n'){
        printf("%d        %d\n", c, c - '0');
    }

    return 0;
}

/*************************************/
/*************************************/
#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>


int main()
{
    int ival = 0;
    int c;

    printf("bir tam sayi giriniz : "); // 3456

    while((c = getchar()) != '\n'){
        ival = ival * 10 + c - '0';
    }

    printf("ival = %d\n", ival);

    return 0;
}

/*************************************/
/*************************************/


#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>


int main()
{
    int c;

    printf("bir tam sayi giriniz : ");
    scanf("%d", &c);

    if(c % 3 == 0)
       printf("EVET TAM BOLUNUR\n");
    else
        printf("hayir tam bolunmez\n");

    return 0;
}

/*************************************/
/*************************************/


#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>

//soru

int main()
{
    int sum = 0;
    int c;

    printf("bir tam sayi giriniz : "); //

    while((c = getchar()) != '\n'){
        sum += c - '0';
    }

    if(sum % 3 == 0)
       printf("EVET TAM BOLUNUR\n");
    else
        printf("hayir tam bolunmez\n");

    return 0;
}

/*************************************/
/*************************************/

unformatted
line buffered



#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>

//soru

int main()
{
    int ival;

    printf("bir giris yapiniz : "); //

    int c1 = getchar();
    int c2 = getchar();
    int c3 = getchar();

    scanf("%d", &ival);

    printf("c1 = %d\n", c1);
    printf("c2 = %d\n", c2);
    printf("c3 = %d\n", c3);
    printf("ival = %d\n", ival);


    return 0;
}

/*************************************/
/*************************************/

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>

//soru

int main()
{
    int ival;

    printf("bir giris yapiniz : "); //

    ival = getchar();

    /*
    if(ival == -1){
        printf("Bir giris yapmadiniz\n");
    }
    */
    if(ival == EOF){  // EOF ---> -1
        printf("Bir giris yapmadiniz\n");
    }

    printf("ival = %d\n", ival);

    return 0;
}

/*************************************/
/*************************************/

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>

//soru

int main()
{
    int x, y;

    printf("bir giris yapiniz : "); //
    scanf("%d", &x);

    printf("bir giris yapiniz : "); //
    scanf("%d", &y);

    printf("\nx = %d\n", x);
    printf("y = %d\n", y);

    return 0;
}

/*************************************/
/*************************************/

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>

//soru

void clear_input_buffer(void)
{
    int ch;

    while((ch = getchar()) != '\n' && ch != EOF)
        ;
}

int main()
{
    int x, y;

    printf("bir giris yapiniz : "); //
    scanf("%d", &x);

    clear_input_buffer();

    printf("ikinci giris yapiniz : "); //
    scanf("%d", &y);

    printf("\nx = %d\n", x);
    printf("y = %d\n", y);

    return 0;
}

/*************************************/
/*************************************/


putchar

int putchar(int);





#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main()
{

    putchar('A');

    printf("%c", 'A');

    putchar('\n');

    putchar(97);

    putchar('\n');

    return 0;
}

/*************************************/
/*************************************/



#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main()
{
    for(int i = 'A'; i <= 'Z'; ++i)
        putchar(i);

    putchar('\n');

    for(int i = 'a'; i <= 'z'; ++i)
        putchar(i);

    putchar('\n');

    for(int i = '0'; i <= '9'; ++i)
        putchar(i);
    putchar('\n');

    return 0;
}

/*************************************/
/*************************************/

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main()
{
    for(int i = 33; i <= 127; ++i)
        putchar(i);

    putchar('\n');

    return 0;
}

/*************************************/
/*************************************/


#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <Windows.h>


//rand --> 0 32767   deger uretir

int main()
{
    for(;;) {
        putchar('A' + rand() % 26);
        Sleep(20);
    }

    putchar('\n');

    return 0;
}

/*************************************/
/*************************************/




















































































